{% extends 'base.html.twig' %}

{% block title %}Shared Resources Planning{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .fc-event {
            cursor: pointer;
        }
        #calendar {
            background-color: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .table-responsive {
            margin-bottom: 2rem;
        }
        .fc-toolbar-title {
            font-size: 1.25em !important;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container py-5">
    <h1 class="mb-4 text-primary">Shared Resources Planning</h1>

    <!-- Table for planning -->
    <div class="table-responsive">
        <h3 class="text-secondary mb-3">Reservation Table</h3>
        <table class="table table-bordered table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Resource</th>
                    <th>Date</th>
                    <th>Time Slot</th>
                    <th>Reserved By</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for reservation in reservations %}
                    <tr>
                        <td>{{ reservation.resource.name }}</td>
                        <td>{{ reservation.startTime|slice(0, 10) }}</td>
                        <td>
                            {% if reservation.startTime|slice(11, 5) == '08:00' %}
                                Morning (08:00 - 12:00)
                            {% else %}
                                Afternoon (13:00 - 17:00)
                            {% endif %}
                        </td>
                        <td>{{ reservation.reservedBy.firstName }} {{ reservation.reservedBy.lastName }}</td>
                        <td>
                            {% if app.user and reservation.id in user_reservations|default([]) %}
                                <a href="{{ path('app_reservation_edit', {'id': reservation.id}) }}" class="btn btn-sm btn-warning me-2">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <a href="{{ path('app_reservation_delete', {'id': reservation.id}) }}" 
                                   class="btn btn-sm btn-danger"
                                   onclick="return confirm('Are you sure you want to delete this reservation?')">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                                <a href="{{ path('app_reservation_exchange', {'id': reservation.id}) }}" 
                                   class="btn btn-sm btn-warning"
                                   onclick="return confirm('Are you sure you want to delete this reservation?')">
                                    <i class="bi bi-trash"></i> Exchnage
                                </a>
                            {% else %}
                                N/A
                            {% endif %}
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="5" class="text-center">No reservations found.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <!-- Calendar for planning -->
    <h3 class="text-secondary mt-5 mb-3">Reservation Calendar</h3>
    <div id="calendar" class="mb-5"></div>
</div>
{% endblock %}


{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        let calendar = null;

        function initializeCalendar() {
            // Clean up existing calendar if it exists
            if (calendar) {
                calendar.destroy();
                calendar = null;
            }

            const calendarEl = document.getElementById('calendar');
            if (!calendarEl) {
                console.error("Calendar element not found!");
                return;
            }

            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                height: 650,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'timeGridDay,timeGridWeek,dayGridMonth'
                },
                slotMinTime: '08:00:00',
                slotMaxTime: '18:00:00',
                allDaySlot: false,
                slotDuration: '01:00:00',
                events: [
                    {
                        title: 'Test Event 1',
                        start: '2023-10-10T08:00:00',
                        end: '2023-10-10T12:00:00'
                    },
                    {
                        title: 'Test Event 2',
                        start: '2023-10-10T13:00:00',
                        end: '2023-10-10T17:00:00'
                    }
                ],
                eventDidMount: function(info) {
                    info.el.title = info.event.title;
                },
                eventClick: function(info) {
                    console.log('Event clicked:', info.event);
                }
            });

            calendar.render();
            console.log('Calendar initialized');
        }

        // Initialize on first load
        document.addEventListener('DOMContentLoaded', initializeCalendar);

        // Handle page reloads and navigation
        document.addEventListener('turbo:load', initializeCalendar);
        document.addEventListener('turbo:render', initializeCalendar);

        // Clean up when leaving the page
        document.addEventListener('turbo:before-cache', function() {
            if (calendar) {
                calendar.destroy();
                calendar = null;
            }
        });

        // Fallback for regular page loads
        if (document.readyState === 'complete') {
            initializeCalendar();
        }

        // Force reload on visibility change
        document.addEventListener('visibilitychange', function() {
            if (document.visibilityState === 'visible') {
                window.location.reload();
            }
        });
    </script>
{% endblock %}